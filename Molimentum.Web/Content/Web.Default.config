<?xml version="1.0"?>
<configuration>
  <configSections>
    <sectionGroup name="elmah">
      <section name="security" requirePermission="false" type="Elmah.SecuritySectionHandler, Elmah"/>
      <section name="errorLog" requirePermission="false" type="Elmah.ErrorLogSectionHandler, Elmah"/>
      <section name="errorMail" requirePermission="false" type="Elmah.ErrorMailSectionHandler, Elmah"/>
      <section name="errorFilter" requirePermission="false" type="Elmah.ErrorFilterSectionHandler, Elmah"/>
      <section name="errorTweet" requirePermission="false" type="Elmah.ErrorTweetSectionHandler, Elmah"/>
    </sectionGroup>
    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration"/>
    <section name="hibernate-configuration" type="NHibernate.Cfg.ConfigurationSectionHandler, NHibernate" />
    <section name="molimentum.providers.google.picasa" type="Molimentum.Providers.Google.Configuration.PicasaConfiguration, Molimentum.Providers.Google"/>
    <section name="molimentum.providers.google.youTube" type="Molimentum.Providers.Google.Configuration.YouTubeConfiguration, Molimentum.Providers.Google"/>
    <section name="molimentum.tasks" type="Molimentum.Tasks.Configuration.TasksConfiguration, Molimentum.Core"/>
    <section name="molimentum.tasks.mailClient" type="Molimentum.Tasks.MailClient.Configuration.MailClientConfiguration, Molimentum.Core"/>
    <section name="molimentum.tasks.mailClient.popMailProvider" type="Molimentum.Tasks.MailClient.PopMailProvider.Configuration.PopMailProviderConfiguration, Molimentum.Core"/>
    <section name="molimentum.web" type="Molimentum.Web.Configuration.WebConfiguration, Molimentum.Web"/>
    <section name="molimentum.services" type="Molimentum.Services.Configuration.MvcConfiguration, Molimentum.Core" />
  </configSections>
  <system.web>
    <globalization culture="de-AT" />
    <httpRuntime requestValidationMode="2.0" />
    <customErrors mode="Off"/>
    <identity impersonate="false"/>
    <compilation debug="true" targetFramework="4.0">
      <assemblies>
        <add assembly="System.Web.Mvc, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
        <add assembly="System.Web.Abstractions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
        <add assembly="System.Web.Routing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
        <add assembly="System.Web.WebPages, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
        <add assembly="System.Web.Helpers, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
        <add assembly="System.Data.Linq, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"/>
      </assemblies>
    </compilation>
    <authentication mode="Forms">
      <forms loginUrl="~/Account/Login"/>
    </authentication>
    <membership>
      <providers>
        <clear/>
        <add name="AspNetSqlMembershipProvider" type="System.Web.Security.SqlMembershipProvider, System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" connectionStringName="ApplicationServices" enablePasswordRetrieval="false" enablePasswordReset="true" requiresQuestionAndAnswer="false" requiresUniqueEmail="false" passwordFormat="Hashed" maxInvalidPasswordAttempts="5" minRequiredPasswordLength="6" minRequiredNonalphanumericCharacters="0" passwordAttemptWindow="10" passwordStrengthRegularExpression="" applicationName="Molimentum"/>
      </providers>
    </membership>
    <profile>
      <providers>
        <clear/>
        <add name="AspNetSqlProfileProvider" type="System.Web.Profile.SqlProfileProvider, System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" connectionStringName="ApplicationServices" applicationName="Molimentum"/>
      </providers>
    </profile>
    <roleManager enabled="true">
      <providers>
        <clear/>
        <add applicationName="Molimentum" name="AspNetSqlRoleProvider" connectionStringName="ApplicationServices" type="System.Web.Security.SqlRoleProvider, System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"/>
      </providers>
    </roleManager>
    <pages validateRequest="false" controlRenderingCompatibilityVersion="3.5" clientIDMode="AutoID">
      <namespaces>
        <add namespace="System.Web.Mvc"/>
        <add namespace="System.Web.Mvc.Ajax"/>
        <add namespace="System.Web.Mvc.Html"/>
        <add namespace="System.Web.Routing"/>
        <add namespace="System.Linq"/>
        <add namespace="System.Collections.Generic"/>
        <add namespace="Molimentum"/>
        <add namespace="Molimentum.Model"/>
        <add namespace="Molimentum.Web"/>
        <add namespace="Molimentum.Web.Mvc"/>
        <add namespace="Molimentum.Web.Views"/>
        <add namespace="Molimentum.Web.Models"/>
      </namespaces>
    </pages>
    <httpHandlers>
      <add verb="*" path="*.mvc" validate="false" type="System.Web.Mvc.MvcHttpHandler, System.Web.Mvc, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
      <add verb="POST,GET,HEAD" path="elmah.axd" type="Elmah.ErrorLogPageFactory, Elmah"/>
    </httpHandlers>
    <httpModules>
      <add name="ErrorLog" type="Elmah.ErrorLogModule, Elmah"/>
    </httpModules>
  </system.web>
  <location path="elmah.axd">
    <system.web>
      <authorization>
        <deny users="?"/>
      </authorization>
    </system.web>
  </location>
  <system.webServer>
    <validation validateIntegratedModeConfiguration="false"/>
    <modules runAllManagedModulesForAllRequests="true">
      <add name="ErrorLog" type="Elmah.ErrorLogModule, Elmah" preCondition="managedHandler"/>
    </modules>
    <handlers>
      <remove name="MvcHttpHandler"/>
      <remove name="UrlRoutingHandler"/>
      <add name="MvcHttpHandler" preCondition="integratedMode" verb="*" path="*.mvc" type="System.Web.Mvc.MvcHttpHandler, System.Web.Mvc, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
      <add name="Elmah" path="elmah.axd" verb="POST,GET,HEAD" type="Elmah.ErrorLogPageFactory, Elmah" preCondition="integratedMode"/>
    </handlers>
  </system.webServer>
  <elmah>
    <security allowRemoteAccess="true"/>
    <errorLog type="Elmah.SqlErrorLog, Elmah" connectionStringName="ElmahDatabase" size="10"/>
  </elmah>
  <unity>
    <typeAliases>
      <typeAlias alias="Singleton" type="Microsoft.Practices.Unity.ContainerControlledLifetimeManager, Microsoft.Practices.Unity"/>
      <typeAlias alias="Transient" type="Microsoft.Practices.Unity.TransientLifetimeManager, Microsoft.Practices.Unity"/>
      <typeAlias alias="Request" type="Molimentum.Web.Mvc.HttpContextLifetimeManager, Molimentum.Core"/>
    </typeAliases>
    <containers>
      <container name="mvc">
        <types>
          <type type="Molimentum.Tasks.MailClient.IMailService, Molimentum.Core" mapTo="Molimentum.Tasks.MailClient.PopMailProvider.PopMailService, Molimentum.Core">
            <lifetime type="Transient"/>
          </type>
          <type type="Molimentum.Tasks.ITask, Molimentum.Core" mapTo="Molimentum.Tasks.MailClient.MailClientTask, Molimentum.Core">
            <constructor>
              <param name="mailService">
                <dependency />
              </param>
              <param name="messageProcessors">
                <dependency name="PostMessageProcessor,PositionReportMessageProcessor,RequestMessageProcessor,PostCommentMessageProcessor,PictureMessageProcessor"/>
              </param>
            </constructor>
            <lifetime type="Transient"/>
          </type>
          <type type="Molimentum.Tasks.MailClient.IMessageProcessor, Molimentum.Core" mapTo="Molimentum.Tasks.MailClient.PostMessageProcessor, Molimentum.Core" name="PostMessageProcessor">
            <lifetime type="Transient"/>
          </type>
          <type type="Molimentum.Tasks.MailClient.IMessageProcessor, Molimentum.Core" mapTo="Molimentum.Tasks.MailClient.PositionReportMessageProcessor, Molimentum.Core" name="PositionReportMessageProcessor">
            <lifetime type="Transient"/>
          </type>
          <type type="Molimentum.Tasks.MailClient.IMessageProcessor, Molimentum.Core" mapTo="Molimentum.Tasks.MailClient.RequestMessageProcessor, Molimentum.Core" name="RequestMessageProcessor">
            <lifetime type="Transient"/>
          </type>
          <type type="Molimentum.Tasks.MailClient.IMessageProcessor, Molimentum.Core" mapTo="Molimentum.Tasks.MailClient.PostCommentMessageProcessor, Molimentum.Core" name="PostCommentMessageProcessor">
            <lifetime type="Transient"/>
          </type>
          <type type="Molimentum.Tasks.MailClient.IMessageProcessor, Molimentum.Core" mapTo="Molimentum.Tasks.MailClient.PictureMessageProcessor, Molimentum.Core" name="PictureMessageProcessor">
            <lifetime type="Transient"/>
          </type>
          <type type="Molimentum.Services.ICacheService, Molimentum.Core" mapTo="Molimentum.Web.Mvc.WebCacheService, Molimentum.Core">
            <lifetime type="Singleton"/>
          </type>
          <type type="Molimentum.Providers.NHibernate.ISessionBuilder, Molimentum.Providers.NHibernate" mapTo="Molimentum.Providers.NHibernate.NHibernateSessionBuilder, Molimentum.Providers.NHibernate">
            <lifetime type="Request"/>
          </type>
          <type type="Molimentum.Repositories.IPositionReportRepository, Molimentum.Core" mapTo="Molimentum.Providers.NHibernate.NHibernatePositionReportRepository, Molimentum.Providers.NHibernate">
            <lifetime type="Request"/>
          </type>
          <type type="Molimentum.Repositories.IPostRepository, Molimentum.Core" mapTo="Molimentum.Providers.NHibernate.NHibernatePostRepository, Molimentum.Providers.NHibernate">
            <lifetime type="Request"/>
          </type>
          <type type="Molimentum.Repositories.IPostCommentRepository, Molimentum.Core" mapTo="Molimentum.Providers.NHibernate.NHibernatePostCommentRepository, Molimentum.Providers.NHibernate">
            <lifetime type="Request"/>
          </type>
          <type type="Molimentum.Repositories.IPostCategoryRepository, Molimentum.Core" mapTo="Molimentum.Providers.NHibernate.NHibernatePostCategoryRepository, Molimentum.Providers.NHibernate">
            <lifetime type="Request"/>
          </type>
          <type type="Molimentum.Services.IUrlResolverService, Molimentum.Core" mapTo="Molimentum.Web.Mvc.UrlResolverService, Molimentum.Core">
            <lifetime type="Singleton"/>
          </type>
          <type type="Molimentum.Services.IFeedService, Molimentum.Core" mapTo="Molimentum.Services.FeedService, Molimentum.Core">
            <lifetime type="Request"/>
          </type>
          <type type="Molimentum.Repositories.IPictureRepository, Molimentum.Core" mapTo="Molimentum.Providers.InMemory.InMemoryPictureRepository, Molimentum.Providers.InMemory" name="InMemoryPictureRepository">
            <lifetime type="Singleton"/>
          </type>
          <type type="Molimentum.Repositories.IPictureRepository, Molimentum.Core" mapTo="Molimentum.Providers.Google.PicasaPictureRepository, Molimentum.Providers.Google" name="PicasaPictureRepository">
            <lifetime type="Singleton"/>
          </type>
          <type type="Molimentum.Repositories.IPictureRepository, Molimentum.Core" mapTo="Molimentum.Repositories.PictureRepositoryCache, Molimentum.Core">
            <constructor>
              <param name="cacheService">
                <dependency/>
              </param>
              <param name="underlyingRepository">
                <dependency name="InMemoryPictureRepository"/>
              </param>
            </constructor>
            <lifetime type="Singleton"/>
          </type>
          <type type="Molimentum.Repositories.IVideoRepository, Molimentum.Core" mapTo="Molimentum.Providers.InMemory.InMemoryVideoRepository, Molimentum.Providers.InMemory" name="InMemoryVideoRepository">
            <lifetime type="Singleton"/>
          </type>
          <type type="Molimentum.Repositories.IVideoRepository, Molimentum.Core" mapTo="Molimentum.Providers.Google.YouTubeVideoRepository, Molimentum.Providers.Google" name="YouTubeVideoRepository">
            <lifetime type="Singleton"/>
          </type>
          <type type="Molimentum.Repositories.IVideoRepository, Molimentum.Core" mapTo="Molimentum.Repositories.VideoRepositoryCache, Molimentum.Core">
            <constructor>
              <param name="cacheService">
                <dependency/>
              </param>
              <param name="underlyingRepository">
                <dependency name="InMemoryVideoRepository"/>
              </param>
            </constructor>
            <lifetime type="Singleton"/>
          </type>
          <type type="Molimentum.Services.INotificationService, Molimentum.Core" mapTo="Molimentum.Web.Mvc.EMailNotificationService, Molimentum.Core">
            <lifetime type="Singleton" />
          </type>
        </types>
      </container>
    </containers>
  </unity>

  <connectionStrings>
    <add name="ApplicationServices" connectionString="" providerName="System.Data.SqlClient"/>
    <add name="MolimentumDatabase" connectionString="" providerName="System.Data.SqlClient"/>
    <add name="ElmahDatabase" connectionString="" providerName="System.Data.SqlClient"/>
  </connectionStrings>

  <hibernate-configuration xmlns="urn:nhibernate-configuration-2.2">
    <session-factory>
      <property name="dialect">NHibernate.Dialect.MsSql2005Dialect</property>
      <property name="connection.connection_string_name">MolimentumDatabase</property>
      <property name='proxyfactory.factory_class'>NHibernate.ByteCode.Castle.ProxyFactoryFactory, NHibernate.ByteCode.Castle</property>
    </session-factory>
  </hibernate-configuration>

  <molimentum.providers.google.picasa>
    <application name=""/>
    <authentication username="" password=""/>
    <gallery user=""/>
    <pictures thumbnailSize="144" maximumImageSize="800"/>
  </molimentum.providers.google.picasa>

  <molimentum.providers.google.youTube>
    <application name=""/>
    <authentication username="" password=""/>
    <gallery user=""/>
    <embedding htmlTemplate="&lt;object width='640' height='385'&gt;&lt;param name='movie' value='http://www.youtube.com/v/{0}&amp;hl=en&amp;fs=1&amp;color1=0x336633&amp;color2=0x336633'&gt;&lt;/param&gt;&lt;param name='allowFullScreen' value='true'&gt;&lt;/param&gt;&lt;param name='allowscriptaccess' value='always'&gt;&lt;/param&gt;&lt;embed src='http://www.youtube.com/v/{0}&amp;hl=en&amp;fs=1&amp;color1=0x336633&amp;color2=0x336633' type='application/x-shockwave-flash' allowscriptaccess='always' allowfullscreen='true' width='640' height='385'&gt;&lt;/embed&gt;&lt;/object&gt;"/>
  </molimentum.providers.google.youTube>

  <molimentum.tasks>
    <tasks>
      <task type="Molimentum.Tasks.MailClient.MailClientTask, Molimentum.Core" interval="10000"/>
    </tasks>
  </molimentum.tasks>

  <molimentum.tasks.mailClient>
    <secret key=""/>
    <pictures albumID=""/>
  </molimentum.tasks.mailClient>

  <molimentum.tasks.mailClient.popMailProvider>
    <server name="" port="" username="" password=""/>
  </molimentum.tasks.mailClient.popMailProvider>

  <molimentum.web>
    <widgets>
      <widget name="LatestPositions" />
      <widget name="LatestAlbums" />
      <widget name="PostCategoriesList" />
      <widget name="Search" />
      <widget name="Translate" />
      <widget name="LatestPostComments" />
      <widget name="Administration" adminOnly="true" />
    </widgets>
    <specialPosts>
      <specialPost id="7c0a817f-873f-4031-b7a7-cb0b0ffc3a80" alternativeUrl="Impressum" />
      <specialPost id="eb0e1b10-36b8-4de9-a303-98c49c730bda" alternativeUrl="DasBoot" />
      <specialPost id="8e2ab327-9d97-41de-986d-71ed59e62dd7" alternativeUrl="DerPlan" />
    </specialPosts>
  </molimentum.web>

  <molimentum.services>
    <emailNotification from="" to="" />
  </molimentum.services>

  <system.net>
    <mailSettings>
      <smtp deliveryMethod="Network">
        <network host="" userName="" password=""/>
      </smtp>
    </mailSettings>
  </system.net>
</configuration>